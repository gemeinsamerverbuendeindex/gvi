#!/usr/bin/bash

JAVA="java"
# ZOO is a softlink to the zookeepers original package
ZOO_HOME="BASEDIR/usr/ZOO"
# own zoo.cfg
ZOOCFG="$ZOO_HOME/conf/zoo.cfg"
LOG4J_OPTIONS="-Dlog4j.debug=true -Dlog4j.configuration=file:$ZOO_HOME/conf/log4j.properties"
ZOOMAIN=org.apache.zookeeper.server.quorum.QuorumPeerMain

# Datenverzeichnis aus Konfigurationsdatei lesen
ZOO_DATA_DIR="$(grep "^[[:space:]]*dataDir" "$ZOOCFG" | sed -e 's/.*=//')"
if [ ! -d "$ZOO_DATA_DIR" ]; then
   mkdir -p "$ZOO_DATA_DIR"
fi
ZOOPIDFILE="$ZOO_DATA_DIR/zookeeper_server.pid"
ZOOOUTFILE="$ZOO_DATA_DIR/zookeeper.out"
echo "Using DataDir: $ZOO_DATA_DIR" >&2


#add the zoocfg dir to classpath
for i in $ZOO_HOME/zookeeper-*.jar
do
    CLASSPATH="$i:$CLASSPATH"
done
for i in $ZOO_HOME/lib/*.jar
do
    CLASSPATH="$i:$CLASSPATH"
done
CLASSPATH="$ZOO_HOME/conf:$CLASSPATH"
echo "Using CLASSPATH: $CLASSPATH" >&2


case $1 in
start)
    echo  "Starting zookeeper ... "
    if [ -f "$ZOOPIDFILE" ]; then
      if kill -0 `cat "$ZOOPIDFILE"` > /dev/null 2>&1; then
         echo $command already running as process `cat "$ZOOPIDFILE"`.
         exit 0
      fi
    fi
    nohup $JAVA $LOG4J_OPTIONS -cp $CLASSPATH $ZOOMAIN $ZOOCFG > $ZOOOUTFILE 2>&1 &
    if [ $? -eq 0 ]
    then
      if /bin/echo $! > "$ZOOPIDFILE"
      then
        sleep 1
        echo STARTED
      else
        echo FAILED TO WRITE PID
        exit 1
      fi
    else
      echo SERVER DID NOT START
      exit 1
    fi
    ;;
stop)
    echo "Stopping zookeeper ... "
    if [ ! -f "$ZOOPIDFILE" ]
    then
      echo "no zookeeper to stop (could not find file $ZOOPIDFILE)"
    else
      echo  $KILL -9 $(cat "$ZOOPIDFILE")
      $KILL -9 $(cat "$ZOOPIDFILE")
      rm "$ZOOPIDFILE"
      echo STOPPED
    fi
    exit 0
    ;;
restart)
    shift
    "$0" stop ${@}
    sleep 3
    "$0" start ${@}
    ;;
*)
    echo "Usage: $0 {start|stop|restart}" >&2

esac
