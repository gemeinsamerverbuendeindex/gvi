<?xml version="1.0" encoding="UTF-8"?>
<project name="Targets to index ZDB data">
    
    <property file="gvi-ant-zdb.local.properties"/>
    
    <import file="gvi-ant-base.xml"/>
    <import file="gvi-solrmarc-ant.xml"/>
    
    <target name="-init">
        <tstamp>
            <format property="time.stamp" pattern="yyyyMMdd"/>
        </tstamp>
        <property name="collection"     value="ZDB" />
        <property name="input.dir"      location="${gvi.input.dir}/zdb/current" />
        <property name="work.dir"       location="${gvi.work.dir}/zdb" />
        <property name="full.input.dir" location="${input.dir}/full"/>
        <property name="full.work.dir"  location="${work.dir}/full/"/>
        <property name="full.log.dir"   location="${work.dir}/full/log"/>
        <property name="update.base.dir"  location="${gvi.input.dir}/dnb/current/update"/>
        <property name="update.input.dir" location="${update.base.dir}"/>
        <property name="update.work.dir"  location="${work.dir}/update"/>
        <property name="update.log.dir"   location="${work.dir}/update/log/"/>
    </target>
    
    <target name="-index-full">
        <delete>
            <fileset dir="${full.log.dir}"  includes="*.log" erroronmissingdir="false"/>
        </delete>
        <solrmarc-index-dir src="${full.input.dir}" logdir="${full.log.dir}" suffix=".xml"/>
    </target>
    
    <target name="-index-updates">
        <zdb-unpack-index-dir src="${update.input.dir}" 
                          dest="${update.work.dir}" 
                          logdir="${update.log.dir}" 
                          indexUnpacked="true"/>
        <zdb-unpack-delete-dir src="${update.input.dir}" 
                          dest="${update.work.dir}" 
                          logdir="${update.log.dir}" 
                          indexUnpacked="true"/>
    </target>

    <target name="-index-all-updates">
        <delete>
            <fileset dir="${update.log.dir}"  includes="*" erroronmissingdir="false"/>
            <fileset dir="${update.work.dir}" includes="*" erroronmissingdir="false"/>
        </delete>
        <zdb-unpack-index-dir src="${update.input.dir}" 
                          dest="${update.work.dir}" 
                          logdir="${update.log.dir}" 
                          indexUnpacked="false"/>
        <solrmarc-index-dir  src="${update.work.dir}" logdir="${update.log.dir}"/>        
    </target>
    
    <!-- Macros for ZDB -->
    <macrodef name="zdb-unpack-index-dir">
        <attribute name="src"/>
        <attribute name="dest"/>
        <attribute name="logdir"/>
        <attribute name="indexUnpacked" default="false"/>
        <sequential>
            <mkdir dir="@{dest}"/>
            <mkdir dir="@{logdir}"/>
            <for param="filename">
                <path>
                    <fileset dir="@{src}">
                        <include name="zdb_zdb_update*.mrc.gz"/>
                    </fileset>
                </path>
                <sequential>
                    <var name="basename" unset="true"/>
                    <basename property="basename" file="@{filename}" suffix=".mrc.gz"/>
                    <echo>Basename=${basename}</echo>
                    <var name="is_mrc_avaliable" unset="true"/>
                    <available property="is_mrc_avaliable" file="@{dest}/${basename}.mrc"/>                    
                    <if>
                        <not>
                            <equals arg1="${is_mrc_avaliable}" arg2="true"/>
                        </not>
                        <then>
                            <gunzip src="@{filename}" dest="@{dest}/${basename}.mrc"/>
                            <if>
                                <equals arg1="@{indexUnpacked}" arg2="true"/>
                                <then>
                                    <solrmarc-index-file file="@{dest}/${basename}.mrc" logdir="@{logdir}"/> 
                                </then>
                            </if>
                        </then>
                    </if>
                </sequential>
            </for>
        </sequential>
    </macrodef>
    
    <macrodef name="zdb-unpack-delete-dir">
        <attribute name="src"/>
        <attribute name="dest"/>
        <attribute name="logdir"/>
        <attribute name="indexUnpacked" default="false"/>
        <sequential>
            <mkdir dir="@{dest}"/>
            <mkdir dir="@{logdir}"/>
            <for param="filename">
                <path>
                    <fileset dir="@{src}" includes="zdb_deletes_*.idns.gz"/>
                </path>
                <sequential>
                    <var name="basename" unset="true"/>
                    <basename property="basename" file="@{filename}" suffix=".gz"/>
                    <var name="file.name" unset="true"/>
                    <property name="file.name" value="${basename}.txt"/>
                    <var name="file.target" value="@{dest}/${file.name}"/>
                    <var name="is_del_avaliable" unset="true"/>
                    <available property="is_del_avaliable" file="${file.target}"/>                    
                    <if>
                        <not>
                            <equals arg1="${is_del_avaliable}" arg2="true"/>
                        </not>
                        <then>
                            <gunzip src="@{filename}" dest="@{dest}/${basename}"/>
                            <move file="@{dest}/${basename}" tofile="${file.target}">
                                <filterchain>
                                    <prefixlines prefix="(DE-600)"/>
                                </filterchain>
                            </move>
                            <if>
                                <equals arg1="@{indexUnpacked}" arg2="true"/>
                                <then>
                                    <solrmarc-delete-file file="${file.target}" logdir="@{logdir}"/>
                                </then>
                            </if>
                        </then>
                    </if>
                </sequential>
            </for>
        </sequential>
    </macrodef>
    
</project>
