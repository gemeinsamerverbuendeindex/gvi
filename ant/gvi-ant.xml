<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="index-updates" name="GVI Jenkins">

    <property file="gvi-ant.local.properties"/>
    <property file="gvi-ant.properties"/>

    <path id="solrmarc.classpath">
        <pathelement location="${solrmarc.dist.path}/SolrMarc.jar"/>
    </path>
    
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${solrmarc.dist.path}/../ant/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    
    

    <macrodef name="solrmarc-index-file" description="Index file or directory" >
        <attribute name="file"/>
        <attribute name="logdir"/>
        <attribute name="suffix"          default=".mrc"/>
        <attribute name="solrmarc.config" default="${solrmarc.config}"/>
        <attribute name="solr.indexer"    default="${solr.indexer}"/>
        <attribute name="solr.baseurl"    default="${solr.baseurl}"/>
        <attribute name="solr.core"       default="${solr.core}"/>
        <sequential>
            <var name="basename" unset="true"/>	   
            <basename property="basename" file="@{file}" suffix="@{suffix}"/>
            <echo>Indexing @{file}</echo>
            <java 
                jar="${solrmarc.dist.path}/SolrMarc.jar"
                fork="true" 
                dir="${solrmarc.dist.path}"
                error="@{logdir}/${basename}_err.log"
                output="@{logdir}/${basename}_out.log"
                maxmemory="1G"
                failonerror="true">
                <sysproperty key="solr.hosturl" value="@{solr.baseurl}/@{solr.core}/update"/>
                <sysproperty key="solr.indexer" value="@{solr.indexer}"/>
                <sysproperty key="solrmarc.log.level" value="INFO"/>
                <sysproperty key="log4j.configurationFile" value="${basedir}/log4j.properties"/>
                <arg value="@{solrmarc.config}"/>
                <arg value="@{file}"/>
            </java>
        </sequential>
    </macrodef>

    <macrodef name="solrmarc-delete-file" description="Delete records by ID" >
        <attribute name="file"/>
        <attribute name="logdir"/>
        <attribute name="solrmarc.config" default="${solrmarc.config}"/> 
        <attribute name="solr.indexer"    default="${solr.indexer}"/>
        <attribute name="solr.baseurl"    default="${solr.baseurl}"/>
        <attribute name="solr.core"       default="${solr.core}"/>
        <sequential>
            <var name="basename" unset="true"/>	   
            <basename property="basename" file="@{file}" suffix=".txt"/>
            <echo>Deleting from Index @{file}</echo>
            <java 
                jar="${solrmarc.dist.path}/SolrMarc.jar"
                fork="true" 
                dir="${solrmarc.dist.path}"
                error="@{logdir}/${basename}_err.log"
                output="@{logdir}/${basename}_out.log"
                maxmemory="1G"
                failonerror="true">
                <sysproperty key="solr.hosturl"            value="@{solr.baseurl}/@{solr.core}/update"/>
                <sysproperty key="solr.indexer"            value="@{solr.indexer}"/>
                <sysproperty key="solrmarc.log.level"      value="INFO"/>
                <sysproperty key="log4j.configurationFile" value="${basedir}/log4j.properties"/>
                <sysproperty key="marc.ids_to_delete"      value="@{file}"/>
                <arg value="@{solrmarc.config}"/>
                <arg value="NONE"/>
            </java>
        </sequential>
    </macrodef>
    
    <macrodef name="solrmarc-index-dir">
        <attribute name="src"/>
        <attribute name="suffix"          default=".mrc"/>
        <attribute name="logdir"/>
        <sequential>
            <echo>Datadir @{src}</echo>
            <mkdir dir="@{logdir}"/>
            <for param="file">
                <path>
                    <fileset dir="@{src}">
                        <include name="*@{suffix}"/>
                    </fileset>
                </path>
                <sequential>
                    <solrmarc-index-file file="@{file}" suffix="@{suffix}" logdir="@{logdir}"/>
                </sequential>
            </for>            
        </sequential>
    </macrodef>
    
    <macrodef name="solrmarc-delete-dir">
        <attribute name="src"/>
        <attribute name="logdir"/>
        <sequential>
            <mkdir dir="@{logdir}"/>
            <echo>Datadir @{src}</echo>
            <for param="file">
                <path>
                    <fileset dir="@{src}" includes="*.txt"/>
                </path>
                <sequential>
                    <echo>Delete @{file}</echo>
                    <solrmarc-delete-file file="@{file}" logdir="@{logdir}"/>
                </sequential>
            </for>
        </sequential>
    </macrodef>
    
    <macrodef name="solr-ping">
        <attribute name="action"/>
        <sequential>
            <get src="${solr.baseurl}/${solr.core}/admin/ping?indent=true&amp;action=@{action}" 
                 dest="solr-response.txt" 
                 verbose="true"
                 maxtime="3"
                 retries="3"/>
            <loadfile property="solr-response.txt" srcFile="solr-response.txt"/>
            <echo message="solr-response"/>
            <delete file="solr-response.txt"/>
        </sequential>
    </macrodef>

    <macrodef name="solr-update">
        <attribute name="action"/>
        <sequential>
            <get src="${solr.baseurl}/${solr.core}/update?indent=true&amp;@{action}=true" 
                 dest="solr-response.txt" 
                 verbose="true"
                 maxtime="3"
                 retries="3"/>
            <loadfile property="solr-response" srcFile="solr-response.txt"/>
            <echo message="${solr-response}"/>
            <delete file="solr-response.txt"/>
        </sequential>
    </macrodef>
    
    <macrodef name="solr-backup">
        <attribute name="action" default="BACKUP"/>
        <attribute name="collection"/>
        <attribute name="location"/>
        <sequential>
            <tstamp>
                <format property="max.age" 
                        pattern="dd.MM.yyyy HH:mm"
                        offset="-2" unit="day"/>
            </tstamp>
            <echo>Delete backups older than ${max.age} at location @{location}</echo>
            <delete>
                <fileset dir="@{location}" includes="**/*">
                    <date datetime="${max.age}" when="before" pattern="dd.MM.yyyy HH:mm"/>
                </fileset>
            </delete>
            <tstamp/>
            <property name="backup-name" value="@{collection}-BACKUP-${DSTAMP}-${TSTAMP}"/>
            <property name="backup-dir"  value="@{location}/${backup-name}"/>
            <echo>Create new Backup ${backup-name} at location ${backup-dir} </echo>
            <tempfile property="solr-response-file" prefix="solr-response-" destDir="/tmp"/>
            <get dest="${solr-response-file}" 
                 verbose="true"
                 maxtime="3"
                 retries="3"
                 src="${solr.baseurl}/admin/collections?action=@{action}&amp;name=${backup-name}&amp;collection=@{collection}&amp;location=@{location}&amp;async=${backup-name}"/>                 
            <loadfile property="solr-response" srcFile="${solr-response-file}"/>
            <echo message="solr-response"/>
            <delete file="${solr-response-file}"/>
            <solr-requeststatus requestid="${backup-name}" 
                                status-property="solr-response-status"
                                message-property="solr-response-message"/>
            <echo message="Status : ${solr-response-status}"/>
            <echo message="Message: ${solr-response-message}"/>
            <waitfor maxwait="60" 
                     maxwaitunit="minute"
                     checkevery="1"
                     checkeveryunit="minute"
                     timeoutproperty="timeout">
                <available file="${backup-dir}/backup.properties"/>
            </waitfor>
            <sleep minutes="1"/>
            <solr-requeststatus requestid="${backup-name}" 
                                status-property="solr-response-status"
                                message-property="solr-response-message"/>
            <fail message="Backup timeout after 60 min: ${solr-response-message}">
                <condition>
                    <equals arg1="true" arg2="${timeout}"/>
                </condition>                
            </fail>
            <fail message="Backup failed: ${solr-response-message}">
                <condition>
                    <not>
                        <equals arg1="completed" arg2="${solr-response-status}"/>
                    </not>
                </condition>
            </fail>
            <echo message="Status : ${solr-response-status}"/>
            <echo message="Message: ${solr-response-message}"/>
        </sequential>
    </macrodef>

    <macrodef name="solr-requeststatus">
        <attribute name="requestid"/>
        <attribute name="status-property"/>
        <attribute name="message-property"/>
        <sequential>
            <tempfile property="solr-response-file" prefix="solr-response-status-" destDir="/tmp"/>
            <get dest="${solr-response-file}" 
                 verbose="true"
                 maxtime="3"
                 retries="3"
                 src="${solr.baseurl}/admin/collections?action=REQUESTSTATUS&amp;requestid=@{requestid}&amp;wt=json&amp;indent=true"/>
            <loadfile property="@{status-property}" srcFile="${solr-response-file}">
                <filterchain>
                    <linecontains>
                        <contains value="state"/>
                    </linecontains>
                    <deletecharacters chars='",'/>
                    <tokenfilter>
                        <replacestring from="state:" to=""/>
                        <trim/>
                    </tokenfilter>
                </filterchain>
            </loadfile>
            <loadfile property="@{message-property}" srcFile="${solr-response-file}">
                <filterchain>
                    <linecontains>
                        <contains value="msg"/>
                    </linecontains>
                    <deletecharacters chars='",}'/>
                    <tokenfilter>
                        <replacestring from="msg:" to=""/>
                        <trim/>
                    </tokenfilter>
                </filterchain>
            </loadfile>
            <delete file="${solr-response-file}"/>
        </sequential>        
    </macrodef>
    
</project>
