<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="init" name="Targets to index SWB data">

   <property file="gvi-ant-swb.local.properties"/>

   <import file="gvi-solrmarc-ant.xml" />

   <!-- Die Variablen definieren. -->
   <target name="init">
      <property name="data.collection" value="SWB" />
      <property name="basename" value="index" />
      <tstamp>
         <format property="date.dir" pattern="yyyy-MM-dd"/>
      </tstamp>
      <property name="base.dir" location="/data/input/gvi/swb/current" />
      <property name="full.dir" location="${base.dir}/full" />
      <property name="full.work.dir" location="${full.dir}/work" />
      <property name="full.log.dir" location="${full.dir}/log" />
      <property name="update.dir"      location="${base.dir}/update/${date.dir}"/>
      <property name="update.work.dir" location="${update.dir}/work"/>
      <property name="update.log.dir"  location="${update.dir}/log"/>
   </target>
    
    <target name="download-updates-swb" depends="init">
        <echo>Checking updates for ${date.download}</echo>
        <ftp action="get"
             server="${ftp.server}"
             userid="${ftp.userid}"
             password="${ftp.password}"
             remotedir="${ftp.remotedir}"
             verbose="true"
             newer="true"
             preservelastmodified="true">
            <fileset dir="${update.dir}">
                <include name="SA-MARC-verbund-${date.download}*.tar.gz"/>
                <include name="TA-MARC-verbund-${date.download}*.tar.gz"/>
                <include name="WA-MARC-verbund-${date.download}*.tar.gz"/>
                <include name="od_del_bsz-tit_${date.download}*"/>
            </fileset>
        </ftp>
        <available property="updates.found" file="${update.dir}"/>
    </target>

    <target name="index-new-updates-swb" depends="download-updates-swb" if="updates.found">
        <solrmarc-index-dir-swb src="${update.dir}" 
                                dest="${update.work.dir}" 
                                logdir="${update.log.dir}" 
                                includeAll="false"/>
        <solrmarc-delete-dir-swb src="${update.dir}" 
                                 dest="${update.work.dir}" 
                                 logdir="${update.log.dir}" 
                                 includeAll="false"/>
    </target>

    <target name="index-all-updates-swb" depends="init">
        <for param="dir">
            <path>
                <dirset dir="${update.base.dir}" includes="*"/>
            </path>
            <sequential>
                <echo>Datadir @{dir}</echo>
                <delete>
                    <fileset dir="@{dir}/log" includes="*.log" erroronmissingdir="false"/>
                </delete>
                <solrmarc-index-dir-swb  src="@{dir}" dest="@{dir}/work" logdir="@{dir}/log" includeAll="true"/>
                <solrmarc-delete-dir-swb src="@{dir}" dest="@{dir}/work" logdir="@{dir}/log" includeAll="true"/>                
            </sequential>
        </for>
    </target>
    
    <!-- Komplettabzug und Updates indexieren -->
    <target name="index-all-swb" depends="init,init-index-date-for-delete">
        <delete>
            <fileset dir="${full.log.dir}" includes="*MARC*.log" erroronmissingdir="false"/>
        </delete>
        <solrmarc-index-dir-swb src="${full.dir}" 
                                dest="${full.work.dir}" 
                                logdir="${full.log.dir}" 
                                includeAll="true"/> 
        <antcall target="index-all-updates-swb"/>
        <antcall target="delete-by-collection-and-index-date"/>
    </target>
    
    <!-- Nur den Komplettabzug indexieren -->
    <target name="index-onlyFull-swb" depends="init,init-index-date-for-delete">
        <delete>
            <fileset dir="${full.log.dir}" includes="*MARC*.log" erroronmissingdir="false"/>
        </delete>
        <solrmarc-index-dir-swb src="${full.dir}" 
                                dest="${full.work.dir}" 
                                logdir="${full.log.dir}" 
                                includeAll="true"/> 
        <antcall target="delete-by-collection-and-index-date"/>
    </target>

    <macrodef name="solrmarc-index-dir-swb">
        <attribute name="src"/>
        <attribute name="dest"/>
        <attribute name="logdir"/>
        <attribute name="includeAll" default="false"/>
        <sequential>
            <mkdir dir="@{dest}"/>
            <mkdir dir="@{logdir}"/>
            <for param="filename">
                <path>
                    <fileset dir="@{src}" includes="*.tar.gz"/>
                </path>
                <sequential>
                    <var name="basename" unset="true"/>
                    <basename property="basename" file="@{filename}" suffix=".tar.gz"/>
                    <var name="is_mrc_avaliable" unset="true"/>
                    <available property="is_mrc_avaliable" file="@{dest}/${basename}.mrc"/>                    
                    <if>
                        <not>
                            <equals arg1="${is_mrc_avaliable}" arg2="true"/>
                        </not>
                        <then>
                            <untar src="@{filename}" dest="@{dest}" compression="gzip">
                                <patternset>
                                    <include name="verbund-tit.mrc"/>
                                </patternset>
                            </untar>
                            <move file="@{dest}/verbund-tit.mrc" tofile="@{dest}/${basename}.mrc"/>
                            <solrmarc-index-file file="@{dest}/${basename}.mrc" logdir="@{logdir}"/>   
                        </then>
                        <else>
                            <if>
                                <equals arg1="@{includeAll}" arg2="true"/>
                                <then>
                                    <solrmarc-index-file file="@{dest}/${basename}.mrc" logdir="@{logdir}"/> 
                                </then>
                            </if>
                        </else>
                    </if>
                </sequential>
            </for>
        </sequential>
    </macrodef>
    
    <macrodef name="solrmarc-delete-dir-swb">
        <attribute name="src"/>
        <attribute name="dest"/>
        <attribute name="logdir"/>
        <attribute name="includeAll" default="false"/>
        <sequential>
            <mkdir dir="@{dest}"/>
            <mkdir dir="@{logdir}"/>
            <for param="filename">
                <path>
                    <fileset dir="@{src}" includes="od_del*.txt"/>
                </path>
                <sequential>
                    <var name="basename" unset="true"/>
                    <basename property="basename" file="@{filename}" suffix=".txt"/>
                    <var name="is_del_avaliable" unset="true"/>
                    <available property="is_del_avaliable" file="@{dest}/${basename}.txt"/>                    
                    <if>
                        <not>
                            <equals arg1="${is_del_avaliable}" arg2="true"/>
                        </not>
                        <then>
                            <copy file="@{filename}" todir="@{dest}"/>
                            <replace file="@{dest}/${basename}.txt" token="PPN:" value="(DE-576)"/>
                            <solrmarc-delete-file file="@{dest}/${basename}.txt" logdir="@{logdir}"/>
                        </then>
                        <else>
                            <if>
                                <equals arg1="@{includeAll}" arg2="true"/>
                                <then>
                                    <solrmarc-delete-file file="@{dest}/${basename}.txt" logdir="@{logdir}"/>
                                </then>
                            </if>
                        </else>
                    </if>
                </sequential>
            </for>
        </sequential>
    </macrodef>

</project>
