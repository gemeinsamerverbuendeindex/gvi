<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Solr interface">
    
    <import file="gvi-ant.xml"/>

    <property file="gvi-solr-ant.local.properties"/>

    <property name="solr.baseurl"           value="http://localhost:3081/solr"/>
    <property name="solr.core"              value="GVI"/>
    <property name="solr.backup.location"   location="${gvi.backup.dir}/solr"/>
    <property name="solr.backup.maxAgeDays" value="3"/>
    <property name="solr.maxSegments"       value="12"/>
    
    
    <target name="solr-backup">
        <solr-backup 
            collection="${solr.core}"
            location="${solr.backup.location}"
            maxAgeDays="${solr.backup.maxAgeDays}"/>
    </target>
    
    <target name="solr-optimize">
        <solr-optimize maxSegments="${solr.maxSegments}"/>
    </target>

    <target name="solr-purge">
        <solr-purge />
    </target>
    
    <target name="solr-ping">
        <solr-ping action="status"/>
    </target>

    <macrodef name="solr-ping">
        <attribute name="action"/>
        <sequential>
            <get src="${solr.baseurl}/${solr.core}/admin/ping?indent=true&amp;action=@{action}" 
                 dest="solr-response.txt" 
                 verbose="true"
                 maxtime="3"
                 retries="3"/>
            <loadfile property="solr-response.txt" srcFile="solr-response.txt"/>
            <echo message="solr-response"/>
            <delete file="solr-response.txt"/>
        </sequential>
    </macrodef>

    <macrodef name="solr-update">
        <attribute name="action"/>
        <sequential>
            <get src="${solr.baseurl}/${solr.core}/update?indent=true&amp;@{action}=true" 
                 dest="solr-response.txt" 
                 verbose="true"
                 maxtime="3"
                 retries="3"/>
            <loadfile property="solr-response" srcFile="solr-response.txt"/>
            <echo message="${solr-response}"/>
            <delete file="solr-response.txt"/>
        </sequential>
    </macrodef>
    
    <macrodef name="solr-optimize">
        <attribute name="maxSegments"  default="8"/>
        <attribute name="waitSearcher" default="false"/>
        <sequential>
            <var name="solr-response-file" unset="true"/>
            <tempfile property="solr-response-file" prefix="solr-response-" destDir="/tmp"/>
            <get src="${solr.baseurl}/${solr.core}/update?optimize=true&amp;maxSegments=@{maxSegments}&amp;waitSearcher=@{waitSearcher}&amp;indent=true&amp;wt=json" 
                 dest="${solr-response-file}" 
                 verbose="true"/>
            <var name="solr-response" unset="true"/>
            <loadfile property="solr-response" srcFile="${solr-response-file}"/>
            <echo message="${solr-response}"/>
            <delete file="${solr-response-file}"/>            
        </sequential>
    </macrodef>
    
    <macrodef name="solr-purge">
        <sequential>
            <property name="solr_del_query"      value="&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;"/>
            <var name="solr-response-file" unset="true"/>
            <tempfile property="solr-response-file" prefix="solr-response-" destDir="/tmp"/>
            <get src="${solr.baseurl}/${solr.core}/update?commit=true&amp;stream.body=${solr_del_query}"
                 dest="${solr-response-file}"
                 verbose="true"/>
            <var name="solr-response" unset="true"/>
            <loadfile property="solr-response" srcFile="${solr-response-file}"/>
            <echo message="${solr-response}"/>
            <delete file="${solr-response-file}"/>
        </sequential>
    </macrodef>

    <macrodef name="solr-backup">
        <attribute name="collection"/>
        <attribute name="location"/>
        <attribute name="maxAgeDays"/>
        <sequential>
            <tstamp>
                <format property="max.age" 
                        pattern="dd.MM.yyyy HH:mm"
                        offset="-@{maxAgeDays}" unit="day"/>
            </tstamp>
            <echo>Delete backups older than ${max.age} at location @{location}</echo>
            <delete includeemptydirs="true">
                <fileset dir="@{location}" includes="**/*" excludes="**/.no_backup">
                    <date datetime="${max.age}" when="before" pattern="dd.MM.yyyy HH:mm"/>
                </fileset>
            </delete>
            <tstamp/>
            <property name="backup-requestid" value="@{collection}-BACKUP-${DSTAMP}-${TSTAMP}"/>
            <property name="backup-name-curr" value="${backup-requestid}"/>
            <property name="backup-dir-curr"  value="@{location}/${backup-name-curr}"/>
            <property name="backup-link-curr" value="@{location}/@{collection}-BACKUP-CURRENT"/>
            <echo>Create new Backup ${backup-requestid} at location ${backup-dir-curr} </echo>
            <tempfile property="solr-response-file" prefix="solr-response-" destDir="/tmp"/>
            <get dest="${solr-response-file}" 
                 verbose="true"
                 maxtime="3"
                 retries="3"
                 src="${solr.baseurl}/admin/collections?action=BACKUP&amp;name=${backup-name-curr}&amp;collection=@{collection}&amp;location=@{location}&amp;async=${backup-requestid}"/>
            <loadfile property="solr-response" srcFile="${solr-response-file}"/>
            <delete file="${solr-response-file}"/>
            <solr-requeststatus requestid="${backup-requestid}" 
                                status-property="solr-response-status"
                                message-property="solr-response-message"/>
            <property name="running" value="running"/>
            <condition property="notRunning">
                <not>
                    <or>
                        <equals arg1="running"   arg2="${solr-response-status}" trim="true"/>
                        <equals arg1="submitted" arg2="${solr-response-status}" trim="true"/>                        
                    </or>
                </not>
            </condition>
            <fail if="notRunning" message="Backup not running. Status: ${solr-response-status}, Message: ${solr-response-message}"/>
            <echo message="Status : ${solr-response-status}"/>
            <echo message="Message: ${solr-response-message}"/>
            <waitfor maxwait="120" 
                     maxwaitunit="minute"
                     checkevery="1"
                     checkeveryunit="minute"
                     timeoutproperty="timeout">
                <available file="${backup-dir-curr}/backup.properties"/>
            </waitfor>
            <sleep minutes="1"/>
            <solr-requeststatus requestid="${backup-requestid}" 
                                status-property="solr-response-status"
                                message-property="solr-response-message"/>
            <fail if="timeout" message="Backup timeout after 120 min: Status: ${solr-response-status}, Message: ${solr-response-message}"/>
            <property name="completed" value="completed"/>
            <condition property="notCompleted">
                <not>
                    <equals arg1="completed" arg2="${solr-response-status}" trim="true"/>
                </not>
            </condition>
            <fail if="notCompleted" message="Backup failed. Status: ${solr-response-status}, Message: ${solr-response-message}"/>
            <symlink link="${backup-link-curr}" resource="${backup-dir-curr}" overwrite="true"/>
            <echo message="Status : ${solr-response-status}"/>
            <echo message="Message: ${solr-response-message}"/>
            <solr-deletestatus requestid="${backup-requestid}" 
                               status-property="solr-response-status"
                               message-property="solr-response-message"/>
        </sequential>
    </macrodef>

    <macrodef name="solr-requeststatus">
        <attribute name="requestid"/>
        <attribute name="status-property"/>
        <attribute name="message-property"/>
        <sequential>
            <solr-status action="REQUESTSTATUS" 
                         requestid="@{requestid}"
                         status-property="@{status-property}"
                         message-property="@{message-property}"/>
        </sequential>        
    </macrodef>

    <macrodef name="solr-deletestatus">
        <attribute name="requestid"/>
        <attribute name="status-property"/>
        <attribute name="message-property"/>
        <sequential>
            <solr-status action="DELETESTATUS" 
                         requestid="@{requestid}"
                         status-property="@{status-property}"
                         message-property="@{message-property}"/>
        </sequential>        
    </macrodef>

    <macrodef name="solr-status">
        <attribute name="action"/>
        <attribute name="requestid"/>
        <attribute name="status-property"/>
        <attribute name="message-property"/>
        <sequential>
            <var name="solr-response-file" unset="true"/>
            <tempfile property="solr-response-file" prefix="solr-response-status-" destDir="/tmp"/>
            <get dest="${solr-response-file}" 
                 verbose="true"
                 maxtime="3"
                 retries="3"
                 src="${solr.baseurl}/admin/collections?action=@{action}&amp;requestid=@{requestid}&amp;wt=json&amp;indent=true"/>
            <var name="@{status-property}" unset="true"/>
            <loadfile property="@{status-property}" srcFile="${solr-response-file}">
                <filterchain>
                    <linecontains>
                        <contains value="state"/>
                    </linecontains>
                    <deletecharacters chars='",'/>
                    <tokenfilter>
                        <replacestring from="state:" to=""/>
                        <trim/>
                    </tokenfilter>
                </filterchain>
            </loadfile>
            <var name="@{message-property}" unset="true"/>
            <loadfile property="@{message-property}" srcFile="${solr-response-file}">
                <filterchain>
                    <linecontains>
                        <contains value="msg"/>
                    </linecontains>
                    <deletecharacters chars='",}'/>
                    <tokenfilter>
                        <replacestring from="msg:" to=""/>
                        <trim/>
                    </tokenfilter>
                </filterchain>
            </loadfile>
            <delete file="${solr-response-file}"/>
        </sequential>        
    </macrodef>

    <macrodef name="solr-delete-by-collection-and-indexdate">
        <attribute name="solr.collection"/>
        <attribute name="data.collection"/>
        <attribute name="date"/>
        <attribute name="response-property"/>
        <sequential>
            <property name="query" value="index_date:[* TO @{date}] AND collection:(@{data.collection})"/>
            <solr-delete-by-query 
                query="${query}"
                collection="@{solr.collection}"
                response-property="@{response-property}"
            />
        </sequential>
    </macrodef>

    <macrodef name="solr-delete-by-query">
        <attribute name="query"/>        
        <attribute name="collection"/>
        <attribute name="response-property"/>
        <sequential>
            <var name="response-property" unset="true"/>
            <var name="solr-delete-response-file" unset="true"/>
            <tempfile property="solr-delete-response-file" prefix="solr-delete-response-status-" destDir="/tmp"/>
            <property name="stream.body" value="&lt;delete>&lt;query>@{query}&lt;/query>&lt;/delete>"/>
            <post to="${solr.baseurl}/@{collection}/update"
                  property="@{response-property}">
                <prop name="commit" value="true"/>
                <prop name="wt" value="json"/>
                <prop name="indent" value="true"/>
                ${stream.body}
            </post>
        </sequential>
    </macrodef>
    
    <macrodef name="solr-exec-batch">
        <attribute name="file"/>
        <attribute name="response-property"/>
        <attribute name="solr.baseurl"    default="${solr.baseurl}"/>
        <attribute name="solr.core"       default="${solr.core}"/>
        <sequential>
            <property name="url">@{solr.baseurl}/@{solr.core}/update?commit=true&amp;wt=json&amp;indent=true</property>        
            <property name="data">@{file}</property>
            <property name="contenttype">Content-Type:text/xml</property>
            <exec executable="curl" outputproperty="@{response-property}" failonerror="true">
                <arg value="--silent"/>
                <arg value="--show-error"/>
                <arg value="--request"/>
                <arg value="POST"/>
                <arg value="${url}"/>
                <arg value="--data-binary"/>
                <arg value="@${data}"/>
                <arg value="--header"/>
                <arg value="${contenttype}"/>
            </exec>
        </sequential>
    </macrodef>

</project>
